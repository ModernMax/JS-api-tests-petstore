import type * as Ajv from 'ajv';
import { ResponseToValidate } from "./Types";
export declare class OpenApiValidationError extends Error {
    isOpenApiValidationError: boolean;
}
export declare class ResponseDoesNotMatchJSONSchemaError extends OpenApiValidationError {
    validationResult: {
        response: ResponseToValidate;
        schema: any;
        validationErrors: Ajv.ErrorObject[];
    };
    constructor(validationResult: {
        response: ResponseToValidate;
        schema: any;
        validationErrors: Ajv.ErrorObject[];
    });
}
export declare class JSONSchemaMissingError extends OpenApiValidationError {
    constructor(response: ResponseToValidate);
}
export declare class MultipleJSONSchemasDefinedError extends OpenApiValidationError {
    constructor(response: ResponseToValidate);
}
export declare class JSONSchemaCannotBeCompiledError extends OpenApiValidationError {
    constructor(response: ResponseToValidate, jsonSchemaCompilationError: Error);
}
export declare class UrlIsNotDescribedInOpenApiError extends OpenApiValidationError {
    constructor(url: string);
}
